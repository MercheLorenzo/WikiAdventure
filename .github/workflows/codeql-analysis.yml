# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
#
name: "CodeQL"

on:
  push:
    branches: [ master ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ master ]
  workflow_dispatch:
  schedule:
    - cron: '34 2 * * 1'

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript' ]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python' ]
        # Learn more:
        # https://docs.github.com/en/free-pro-team@latest/github/finding-security-vulnerabilities-and-errors-in-your-code/configuring-code-scanning#changing-the-languages-that-are-analyzed

    steps:
    - uses: actions/checkout@v2
    - name: Setup Haxe environment
      # You may pin to the exact commit or the version.
      # uses: krdlab/setup-haxe@aab4595a86d3a14ec1b51b9dabad6b6e7810313e
      uses: krdlab/setup-haxe@v1.1.4
      with:
        # Version Spec of the version to use. Example: 3.4.7
        haxe-version: 4.1.4
    - name: Install haxe lib
      continue-on-error: true
      run: |
        haxelib git twitch-auth https://github.com/Sacramentix/hx-twitch-auth.git --always
        haxelib git twitch-api-call https://github.com/Sacramentix/hx-twitch-api-call.git --always
        haxelib git d-fischer-logger https://github.com/Sacramentix/hx-d-fischer-logger.git --always
        haxelib git d-fischer-shared-utils https://github.com/Sacramentix/hx-d-fischer-shared-utils.git --always
        haxelib git d-fischer-typed-event-emitter https://github.com/Sacramentix/hx-d-fischer-typed-event-emitter.git --always
        haxelib git ws https://github.com/Sacramentix/hx-ws.git --always
        haxelib install uuid --always
        haxelib install tink_json --always
    - continue-on-error: true
      run: |
        haxelib git d-fischer-connection https://github.com/Sacramentix/hx-d-fischer-connection.git --always
    - continue-on-error: true
      run: |
        haxelib git twitch https://github.com/Sacramentix/hx-twitch.git --always
    - name: Install ircv3 lib
      continue-on-error: true
      run: |
        haxelib git ircv3 https://github.com/Sacramentix/hx-ircv3.git --always
    - continue-on-error: true
      run: |
        haxelib git twitch-chat-client https://github.com/Sacramentix/hx-twitch-chat-client.git --always
    - continue-on-error: true
      run: |
        git config --global user.email 'benji.u1225u@gmail.com'
        git config --global user.name 'Sacramentix'
    - name: Build backend
      run: |
        haxe node.hxml
    - name: Checkout repository
      uses: actions/checkout@v2

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: ${{ matrix.language }}
        # If you wish to specify custom queries, you can do so here or in a config file.
        # By default, queries listed here will override any specified in a config file.
        # Prefix the list here with "+" to use these queries and those in the config file.
        # queries: ./path/to/local/query, your-org/your-repo/queries@main

    # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
    # üìö https://git.io/JvXDl

    # ‚úèÔ∏è If the Autobuild fails above, remove it and uncomment the following three lines
    #    and modify them (or add more) to build your code if your project
    #    uses a compiled language

    #- run: |
    #   make bootstrap
    #   make release

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1
